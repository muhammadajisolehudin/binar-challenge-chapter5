{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\n//cara import file external\nimport { http } from \"../../utils/http\";\nimport { API_ENDPOINTS } from \"../../utils/api-endpoints\";\n\n//cara pertama untuk hit API\n//const fetchDataMovie = async (page) => {\n//untuk handle api\n/*console.log(page, \"ini page\")\r\nconst { data } = await http.get(`3/movie/now_playing?page=${page}`)\r\nreturn data*/\n\n// metode level 3 (tamabah 1 parameter page)\n/*console.log(page, \"ini page\")\r\nconst { data } = await http.get(`${API_ENDPOINTS.NOW_PLAYING}?page=${page ? page : 1}`)\r\nreturn data*/\n\n//}\n\n//metode level 4 (bisa menampung lebih dari 1 parameter, lebih dinamis)\nconst fetchDataMovie = async ({\n  queryKey\n}) => {\n  const [_key, _params] = queryKey;\n  const {\n    data\n  } = await http.get(_key, {\n    params: _params\n  });\n  return data;\n};\n\n//dinamis handle\n//level 3\n/*const useMovieDataQuery = (page) =>{\r\n    return useQuery([\"userData\", page], ()=> fetchDataMovie(page));\r\n}*/\n\n//Level 4\nconst useMovieDataQuery = option => {\n  _s();\n  return useQuery([API_ENDPOINTS.NOW_PLAYING, option], fetchDataMovie());\n};\n_s(useMovieDataQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport { fetchDataMovie, useMovieDataQuery };","map":{"version":3,"names":["useQuery","http","API_ENDPOINTS","fetchDataMovie","queryKey","_key","_params","data","get","params","useMovieDataQuery","option","_s","NOW_PLAYING"],"sources":["C:/Users/USER/OneDrive/Dokumen/GitHub/BINAR ACDEMY COURSE/ChallengeChapter4/Rest API/src/services/movie/get-data-movie.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\n//cara import file external\r\nimport {http} from \"../../utils/http\";\r\nimport { API_ENDPOINTS } from \"../../utils/api-endpoints\";\r\n\r\n//cara pertama untuk hit API\r\n//const fetchDataMovie = async (page) => {\r\n    //untuk handle api\r\n    /*console.log(page, \"ini page\")\r\n    const { data } = await http.get(`3/movie/now_playing?page=${page}`)\r\n    return data*/\r\n    \r\n    // metode level 3 (tamabah 1 parameter page)\r\n    /*console.log(page, \"ini page\")\r\n    const { data } = await http.get(`${API_ENDPOINTS.NOW_PLAYING}?page=${page ? page : 1}`)\r\n    return data*/\r\n\r\n//}\r\n\r\n//metode level 4 (bisa menampung lebih dari 1 parameter, lebih dinamis)\r\nconst fetchDataMovie = async ({queryKey}) => {\r\n    const [_key, _params] = queryKey;\r\n    const { data } = await http.get(_key, {params: _params});\r\n    return data\r\n}\r\n\r\n//dinamis handle\r\n//level 3\r\n/*const useMovieDataQuery = (page) =>{\r\n    return useQuery([\"userData\", page], ()=> fetchDataMovie(page));\r\n}*/\r\n\r\n//Level 4\r\nconst useMovieDataQuery = (option) =>{\r\n    return useQuery([API_ENDPOINTS.NOW_PLAYING, option], fetchDataMovie());\r\n}\r\n\r\nexport {fetchDataMovie, useMovieDataQuery}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD;AACA,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAASC,aAAa,QAAQ,2BAA2B;;AAEzD;AACA;AACI;AACA;AACJ;AACA;;AAEI;AACA;AACJ;AACA;;AAEA;;AAEA;AACA,MAAMC,cAAc,GAAG,MAAAA,CAAO;EAACC;AAAQ,CAAC,KAAK;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGF,QAAQ;EAChC,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAMN,IAAI,CAACO,GAAG,CAACH,IAAI,EAAE;IAACI,MAAM,EAAEH;EAAO,CAAC,CAAC;EACxD,OAAOC,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMG,iBAAiB,GAAIC,MAAM,IAAI;EAAAC,EAAA;EACjC,OAAOZ,QAAQ,CAAC,CAACE,aAAa,CAACW,WAAW,EAAEF,MAAM,CAAC,EAAER,cAAc,CAAC,CAAC,CAAC;AAC1E,CAAC;AAAAS,EAAA,CAFKF,iBAAiB;EAAA,QACZV,QAAQ;AAAA;AAGnB,SAAQG,cAAc,EAAEO,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}