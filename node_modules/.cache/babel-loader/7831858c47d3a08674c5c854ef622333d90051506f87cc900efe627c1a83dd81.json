{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { API_ENDPOINTS } from \"../../utils/api-endpoints\";\nimport { http3 } from \"../../utils/http3\";\nconst fetchUserData = async ({\n  queryKey\n}) => {\n  const [_key] = queryKey;\n  const {\n    data\n  } = await http3.get(_key).then(value => {\n    let Datahasil = {\n      Adinda: value.data.data.name,\n      email: value.data.data.email\n    };\n    console.log(value, \"ini value\");\n    return {\n      data: Datahasil\n    };\n  }).catch(err => {\n    // if (err.response.status === 401) {\n    //   window.location.href = \"/\"\n    // }\n    console.log(err, \"ini errornya\");\n  });\n  return data;\n};\nconst useGetDataUser = options => {\n  _s();\n  return useQuery([API_ENDPOINTS.GET_ME, options], fetchUserData);\n};\n_s(useGetDataUser, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport { fetchUserData, useGetDataUser };","map":{"version":3,"names":["useQuery","API_ENDPOINTS","http3","fetchUserData","queryKey","_key","data","get","then","value","Datahasil","Adinda","name","email","console","log","catch","err","useGetDataUser","options","_s","GET_ME"],"sources":["C:/Users/USER/OneDrive/Dokumen/GitHub/BINAR ACDEMY COURSE/c ch5/s/binar-challenge-chapter5/src/services/auth/get_user.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { API_ENDPOINTS } from \"../../utils/api-endpoints\";\nimport { http3 } from \"../../utils/http3\";\n\nconst fetchUserData = async ({ queryKey }) => {\n  const [_key] = queryKey;\n  const { data } = await http3.get(_key)\n    .then((value) => {\n      let Datahasil = {\n        Adinda: value.data.data.name,\n        email: value.data.data.email\n      }\n\n        console.log(value, \"ini value\")\n        return {data:Datahasil}\n    }).catch((err) => {\n      // if (err.response.status === 401) {\n      //   window.location.href = \"/\"\n      // }\n      console.log(err, \"ini errornya\")\n    })\n  return data\n}\nconst useGetDataUser = (options) => {\n  return useQuery([API_ENDPOINTS.GET_ME, options], fetchUserData);\n};\nexport { fetchUserData, useGetDataUser };\n\n\n\n\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,KAAK,QAAQ,mBAAmB;AAEzC,MAAMC,aAAa,GAAG,MAAAA,CAAO;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAM,CAACC,IAAI,CAAC,GAAGD,QAAQ;EACvB,MAAM;IAAEE;EAAK,CAAC,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACF,IAAI,CAAC,CACnCG,IAAI,CAAEC,KAAK,IAAK;IACf,IAAIC,SAAS,GAAG;MACdC,MAAM,EAAEF,KAAK,CAACH,IAAI,CAACA,IAAI,CAACM,IAAI;MAC5BC,KAAK,EAAEJ,KAAK,CAACH,IAAI,CAACA,IAAI,CAACO;IACzB,CAAC;IAECC,OAAO,CAACC,GAAG,CAACN,KAAK,EAAE,WAAW,CAAC;IAC/B,OAAO;MAACH,IAAI,EAACI;IAAS,CAAC;EAC3B,CAAC,CAAC,CAACM,KAAK,CAAEC,GAAG,IAAK;IAChB;IACA;IACA;IACAH,OAAO,CAACC,GAAG,CAACE,GAAG,EAAE,cAAc,CAAC;EAClC,CAAC,CAAC;EACJ,OAAOX,IAAI;AACb,CAAC;AACD,MAAMY,cAAc,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAClC,OAAOpB,QAAQ,CAAC,CAACC,aAAa,CAACoB,MAAM,EAAEF,OAAO,CAAC,EAAEhB,aAAa,CAAC;AACjE,CAAC;AAACiB,EAAA,CAFIF,cAAc;EAAA,QACXlB,QAAQ;AAAA;AAEjB,SAASG,aAAa,EAAEe,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}